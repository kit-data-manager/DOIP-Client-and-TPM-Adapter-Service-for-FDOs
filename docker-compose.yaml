version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    mem_limit: 1g
    healthcheck:
      test: curl -sSf http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  tpmapp:
    build: 
      context: ./tpm_app
      dockerfile: dockerfile
    ports:
      - "8090:8090"
    healthcheck:
      test: curl -sSf http://localhost:8090/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.11.0
    container_name: neo4j
    ports:
      - "7474:7474" # HTTP Browser
      - "7687:7687" # Bolt Protocol
    environment:
      - NEO4J_AUTH=neo4j/testpassword  # Set username and password
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes # Accept license agreement
    volumes:
      - neo4j_data:/data # Persist data
      - neo4j_logs:/logs # Persist logs
      - neo4j_import:/var/lib/neo4j/import # For importing files
      - neo4j_plugins:/plugins # For additional plugins

  flaskapp1:
    build:
      context: ./flask_app1
      dockerfile: dockerfile
    ports:
      - "5001:5001"

  flaskapp2:
    build:
      context: ./flask_app2
      dockerfile: dockerfile
    ports:
      - "5002:5002"
    depends_on:
      - elasticsearch
      - neo4j
    volumes:
      - ./:/app

      
volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
